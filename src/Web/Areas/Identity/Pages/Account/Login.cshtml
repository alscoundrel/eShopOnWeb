@page
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}


<div class="container account-login-container">
    <h2>@ViewData["Title"]</h2>
    <div class="row">
        <div class="col-md-12">
            <section>
                <form method="post">
                    <hr />
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Input.Email"></label>
                        <input asp-for="Input.Email" class="form-control" />
                        <span asp-validation-for="Input.Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Input.Password"></label>
                        <input asp-for="Input.Password" class="form-control" />
                        <span asp-validation-for="Input.Password" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label asp-for="Input.RememberMe">
                                <input asp-for="Input.RememberMe" />
                                @Html.DisplayNameFor(m => m.Input.RememberMe)
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-default">Log in</button>
                    </div>
                    <div class="form-group">
                        <p>
                            <a asp-page="./ForgotPassword">Forgot your password?</a>
                        </p>
                        <p>
                            <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                        </p>
                    </div>
                    <p>
                        Note that for demo purposes you don't need to register and can login with these credentials:
                    </p>
                    <p>
                        User:     <b>demouser@microsoft.com</b>
                    </p>
                    <p>
                        Password: <b>Pass@word1</b>
                    </p>


                </form>
                
                <div class="container">
                    <div class="row">
                        <div class="col-md-2">
                            <div class="g-signin2" data-onsuccess="onSignIn" data-theme="dark"></div>
                        </div>
                        <div class="col-md-2">
                            <fb:login-button scope="public_profile,email" onlogin="checkLoginState();"></fb:login-button>
                        </div>
                        <div class="col-md-2">
                        One of three columns
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-m-2">
                        
                    </div>
                    <div class="col-m-2">
                        
                    </div>
                </div>
                <div id="status"></div>
            </section>
        </div>
    </div>
</div>

@{
    var googleAuthNSection = Configuration.GetSection("Authentication:Google");
    var ClientId = googleAuthNSection["ClientId"];
    var facebookAuthNSection = Configuration.GetSection("Authentication:Facebook");
    var AppId = facebookAuthNSection["AppId"];
}
    <meta name="google-signin-scope" content="profile email">
    <meta name="google-signin-client_id" content="@ClientId">
    <script src="https://apis.google.com/js/platform.js" async defer></script>

    <script>
        function onSignIn(googleUser) {
            // Useful data for your client-side scripts:
            var profile = googleUser.getBasicProfile();
            console.log("ID: " + profile.getId()); // Don't send this directly to your server!
            console.log('Full Name: ' + profile.getName());
            console.log('Given Name: ' + profile.getGivenName());
            console.log('Family Name: ' + profile.getFamilyName());
            console.log("Image URL: " + profile.getImageUrl());
            console.log("Email: " + profile.getEmail());

            // The ID token you need to pass to your backend:
            var id_token = googleUser.getAuthResponse().id_token;
            console.log("ID Token: " + id_token);
        }
    </script>

<script>

  function statusChangeCallback(response) {  // Called with the results from FB.getLoginStatus().
    console.log('statusChangeCallback');
    console.log(response);                   // The current login status of the person.
    if (response.status === 'connected') {   // Logged into your webpage and Facebook.
      testAPI();  
    } else {                                 // Not logged into your webpage or we are unable to tell.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this webpage.';
    }
  }


  function checkLoginState() {               // Called when a person is finished with the Login Button.
    FB.getLoginStatus(function(response) {   // See the onlogin handler
      statusChangeCallback(response);
    });
  }


  window.fbAsyncInit = function() {
    FB.init({
      appId      : '@AppId',
      cookie     : true,                     // Enable cookies to allow the server to access the session.
      xfbml      : true,                     // Parse social plugins on this webpage.
      version    : 'v5.0'                    // Use this Graph API version for this call.
    });


    FB.getLoginStatus(function(response) {   // Called after the JS SDK has been initialized.
      statusChangeCallback(response);        // Returns the login status.
    });
  };

  
  (function(d, s, id) {                      // Load the SDK asynchronously
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

 
  function testAPI() {                      // Testing Graph API after login.  See statusChangeCallback() for when this call is made.
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }

</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
